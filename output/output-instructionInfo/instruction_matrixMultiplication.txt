Basic Block: 0
      call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
      %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
      ret void

Basic Block: 1
      %1 = alloca i32, align 4
      %2 = alloca [5 x i32], align 16
      %3 = alloca i32, align 4
      %4 = alloca %class.InsertionSort, align 1
      store i32 0, i32* %1, align 4
      %5 = bitcast [5 x i32]* %2 to i8*
      call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 16 bitcast ([5 x i32]* @__const.main.arr to i8*), i64 20, i1 false)
      store i32 5, i32* %3, align 4
      %6 = getelementptr inbounds [5 x i32], [5 x i32]* %2, i64 0, i64 0
      %7 = load i32, i32* %3, align 4
      call void @_ZN13InsertionSort4sortEPii(%class.InsertionSort* noundef nonnull align 1 dereferenceable(1) %4, i32* noundef %6, i32 noundef %7)
      %8 = getelementptr inbounds [5 x i32], [5 x i32]* %2, i64 0, i64 0
      %9 = load i32, i32* %3, align 4
      call void @_ZN13InsertionSort10printArrayEPii(i32* noundef %8, i32 noundef %9)
      ret i32 0

Basic Block: 2
      %4 = alloca %class.InsertionSort*, align 8
      %5 = alloca i32*, align 8
      %6 = alloca i32, align 4
      %7 = alloca i32, align 4
      %8 = alloca i32, align 4
      %9 = alloca i32, align 4
      store %class.InsertionSort* %0, %class.InsertionSort** %4, align 8
      store i32* %1, i32** %5, align 8
      store i32 %2, i32* %6, align 4
      %10 = load %class.InsertionSort*, %class.InsertionSort** %4, align 8
      store i32 1, i32* %7, align 4
      br label %11

Basic Block: 3
      %12 = load i32, i32* %7, align 4
      %13 = load i32, i32* %6, align 4
      %14 = icmp slt i32 %12, %13
      br i1 %14, label %15, label %59

Basic Block: 4
      %16 = load i32*, i32** %5, align 8
      %17 = load i32, i32* %7, align 4
      %18 = sext i32 %17 to i64
      %19 = getelementptr inbounds i32, i32* %16, i64 %18
      %20 = load i32, i32* %19, align 4
      store i32 %20, i32* %8, align 4
      %21 = load i32, i32* %7, align 4
      %22 = sub nsw i32 %21, 1
      store i32 %22, i32* %9, align 4
      br label %23

Basic Block: 5
      %24 = load i32, i32* %9, align 4
      %25 = icmp sge i32 %24, 0
      br i1 %25, label %26, label %34

Basic Block: 6
      %27 = load i32*, i32** %5, align 8
      %28 = load i32, i32* %9, align 4
      %29 = sext i32 %28 to i64
      %30 = getelementptr inbounds i32, i32* %27, i64 %29
      %31 = load i32, i32* %30, align 4
      %32 = load i32, i32* %8, align 4
      %33 = icmp sgt i32 %31, %32
      br label %34

Basic Block: 7
      %35 = phi i1 [ false, %23 ], [ %33, %26 ]
      br i1 %35, label %36, label %49

Basic Block: 8
      %37 = load i32*, i32** %5, align 8
      %38 = load i32, i32* %9, align 4
      %39 = sext i32 %38 to i64
      %40 = getelementptr inbounds i32, i32* %37, i64 %39
      %41 = load i32, i32* %40, align 4
      %42 = load i32*, i32** %5, align 8
      %43 = load i32, i32* %9, align 4
      %44 = add nsw i32 %43, 1
      %45 = sext i32 %44 to i64
      %46 = getelementptr inbounds i32, i32* %42, i64 %45
      store i32 %41, i32* %46, align 4
      %47 = load i32, i32* %9, align 4
      %48 = sub nsw i32 %47, 1
      store i32 %48, i32* %9, align 4
      br label %23, !llvm.loop !6

Basic Block: 9
      %50 = load i32, i32* %8, align 4
      %51 = load i32*, i32** %5, align 8
      %52 = load i32, i32* %9, align 4
      %53 = add nsw i32 %52, 1
      %54 = sext i32 %53 to i64
      %55 = getelementptr inbounds i32, i32* %51, i64 %54
      store i32 %50, i32* %55, align 4
      br label %56

Basic Block: 10
      %57 = load i32, i32* %7, align 4
      %58 = add nsw i32 %57, 1
      store i32 %58, i32* %7, align 4
      br label %11, !llvm.loop !8

Basic Block: 11
      ret void

Basic Block: 12
      %3 = alloca i32*, align 8
      %4 = alloca i32, align 4
      %5 = alloca i32, align 4
      store i32* %0, i32** %3, align 8
      store i32 %1, i32* %4, align 4
      store i32 0, i32* %5, align 4
      br label %6

Basic Block: 13
      %7 = load i32, i32* %5, align 4
      %8 = load i32, i32* %4, align 4
      %9 = icmp slt i32 %7, %8
      br i1 %9, label %10, label %21

Basic Block: 14
      %11 = load i32*, i32** %3, align 8
      %12 = load i32, i32* %5, align 4
      %13 = sext i32 %12 to i64
      %14 = getelementptr inbounds i32, i32* %11, i64 %13
      %15 = load i32, i32* %14, align 4
      %16 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %15)
      %17 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %16, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
      br label %18

Basic Block: 15
      %19 = load i32, i32* %5, align 4
      %20 = add nsw i32 %19, 1
      store i32 %20, i32* %5, align 4
      br label %6, !llvm.loop !6

Basic Block: 16
      %22 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* noundef @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
      ret void

Basic Block: 17
      call void @__cxx_global_var_init()
      ret void

